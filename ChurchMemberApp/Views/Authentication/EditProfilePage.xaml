<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:xct="http://xamarin.com/schemas/2020/toolkit" xmlns:ci="clr-namespace:ImageCircle.Forms.Plugin.Abstractions;assembly=ImageCircle.Forms.Plugin"
             x:Class="ChurchMemberApp.Views.Authentication.EditProfilePage" Shell.PresentationMode="ModalAnimated">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="InvalidStyle" TargetType="Entry">
                <Setter Property="TextColor" Value="Red" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView VerticalScrollBarVisibility="Never">
            <StackLayout Spacing="30" Margin="20,0">
                <Label Text="&#xf053;" FontFamily="FontIcon" FontSize="20" TextColor="Black" HorizontalOptions="Start" VerticalOptions="Center" Margin="0,20,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer x:Name="back" NumberOfTapsRequired="1" Tapped="back_Tapped" />
                    </Label.GestureRecognizers>
                </Label>
                <Label FontFamily="BoldFont"  Text="EDIT PROFILE" TextColor="Black" FontSize="30" Margin="0, 15" />

                <StackLayout>
                    <!--<Label FontFamily="FontIcon" Text="&#xf03d;" TextColor="DarkGray" x:Name="upload" FontSize="40" HorizontalOptions="Center">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer x:Name="upload" Tapped="upload_Tapped" NumberOfTapsRequired="1" />
                        </Label.GestureRecognizers>
                    </Label>-->

                    <Frame Padding="0" CornerRadius="60" HeightRequest="120" IsClippedToBounds="True" WidthRequest="120" HorizontalOptions="Center" VerticalOptions="Center" BorderColor="Red" x:Name="frameImg">
                        <Grid >
                            <ActivityIndicator Color="OrangeRed" IsVisible="False" IsRunning="True" x:Name="imgloading" VerticalOptions="Center" HorizontalOptions="Center" />
                            <Label Text="Upload Picture" TextColor="DarkGray" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" />
                            <ci:CircleImage   
                            HeightRequest="36"   
                            WidthRequest="36"   
                                x:Name="imageView" 
                            Aspect="AspectFill">

                            </ci:CircleImage>
                        </Grid>
                        
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer x:Name="upload" Tapped="upload_Tapped" NumberOfTapsRequired="1" />
                        </Frame.GestureRecognizers>
                    </Frame>
                </StackLayout>

                <StackLayout>
                    <Label Text="NAME" FontFamily="MediumFont" TextColor="{AppThemeBinding Light=Black, Dark=White}" FontSize="16" />
                    <Entry x:Name="name" Placeholder="Create Name"/>
                    <BoxView HeightRequest="1" BackgroundColor="Gray">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference name}, Path=IsFocused}" Value="True">
                                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                            </DataTrigger>
                        </BoxView.Triggers>
                    </BoxView>
                </StackLayout>

                <StackLayout>
                    <Label Text="EMAIL" FontFamily="MediumFont" TextColor="{AppThemeBinding Light=Black, Dark=White}" FontSize="16" />
                    <Entry x:Name="email" IsEnabled="True" Placeholder="Create Email" TextColor="{AppThemeBinding Light=Black, Dark=White}">
                        <Entry.Behaviors>
                            <xct:EmailValidationBehavior
                                 DecorationFlags="Trim"
                                 InvalidStyle="{StaticResource InvalidStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <BoxView HeightRequest="1" BackgroundColor="Gray">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference email}, Path=IsFocused}" Value="True">
                                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                            </DataTrigger>
                        </BoxView.Triggers>
                    </BoxView>

                </StackLayout>


                <StackLayout>
                    <Label Text="Phone" FontFamily="MediumFont"  TextColor="{AppThemeBinding Light=Black, Dark=White}" FontSize="16" />
                    <Entry x:Name="phone" Keyboard="Numeric" Placeholder="Phone Number" TextColor="{AppThemeBinding Light=Black, Dark=White}">
                        <Entry.Behaviors>
                            <xct:TextValidationBehavior MinimumLength="10"  InvalidStyle="{StaticResource InvalidStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <BoxView HeightRequest="1" BackgroundColor="Gray">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference phone}, Path=IsFocused}" Value="True">
                                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                            </DataTrigger>
                        </BoxView.Triggers>
                    </BoxView>
                </StackLayout>

                <!--<StackLayout>
                    <Label Text="Password" FontFamily="MediumFont"  TextColor="{AppThemeBinding Light=Black, Dark=White}" FontSize="16" />
                    <Entry x:Name="pass" Placeholder="Create Password" TextColor="{AppThemeBinding Light=Black, Dark=White}" IsPassword="True">
                        <Entry.Behaviors>
                            <xct:TextValidationBehavior MinimumLength="10"  InvalidStyle="{StaticResource InvalidStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <BoxView HeightRequest="1" BackgroundColor="Gray">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference pass}, Path=IsFocused}" Value="True">
                                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                            </DataTrigger>
                        </BoxView.Triggers>
                    </BoxView>
                </StackLayout>


                <StackLayout>
                    <Label Text="Confirm Password" FontFamily="MediumFont"  TextColor="{AppThemeBinding Light=Black, Dark=White}" FontSize="16" />
                    <Entry x:Name="cpass" Placeholder="Create Confirm Password"  TextColor="{AppThemeBinding Light=Black, Dark=White}">
                        <Entry.Behaviors>
                            <xct:RequiredStringValidationBehavior RequiredString="{Binding Text, Source={x:Reference pass}}"  InvalidStyle="{StaticResource InvalidStyle}"/>
                        </Entry.Behaviors>
                    </Entry>
                    <BoxView HeightRequest="1" BackgroundColor="Gray">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference cpass}, Path=IsFocused}" Value="True">
                                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                            </DataTrigger>
                        </BoxView.Triggers>
                    </BoxView>
                </StackLayout>-->

                <Button Style="{StaticResource Buttons}" Text="UPDATE" x:Name="update" Clicked="update_Clicked" TextColor="White" />


                <Editor x:Name="UploadedUrl" TextColor="Black" HeightRequest="85" Text="Image URL:"  IsVisible="false"/>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>